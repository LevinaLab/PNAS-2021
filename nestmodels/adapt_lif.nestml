neuron adapt_lif:

  state:
    v mV = 0 mV    # Membrane potential in mV
    w pA = 0 pA    # Membrane potential recovery variable
  end

  equations:
    v' =-(v/tau_m) - (w + I_e)/C_m 
    w' = -w/ tau_w
  end

  parameters:
    tau_m   ms = 10ms      # Membrane time constant.
    C_m     pF = 250pF     # Capacity of the membrane
    t_ref   ms = 2ms       # Duration of refractory period.
    tau_syn ms = 2ms       # Time constant of synaptic current.
    E_L     mV = 0mV     # Resting membrane potential.
    I_e     pA = 0pA       # Constant input current.
    V_reset mV = 10mV   # Reset potential of the membrane.
    Theta   mV = 20mV    # Spike threshold.
    tau_w   ms = 100ms
    a       real = 1 
    b pA = 2pA
    with_refr_input boolean = false # If true, do not discard input during
    #refractory period. Default: false.
  end

  internals:
    # refractory time in steps
    RefractoryCounts integer = steps(t_ref)
    # counts number of tick during the refractory period
    r integer
  end

  input:
    spikes mV <- spike
    #I_e pA <- continuous
  end

  output: spike

  update:
    integrate_odes()

    if r>0: #refractory
        r-=1
        v=V_reset
    elif v>=Theta:
        r=RefractoryCounts +1
        v = V_reset
        w+=b
    # add synaptic current
    else:
        v += spikes
    end
    # threshold crossing
    if v >= Theta:
      v = V_reset
      w += b
      emit_spike()
    end
   end
end

